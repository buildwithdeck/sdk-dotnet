//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Deck.SDK.Models.Components
{
    using Deck.SDK.Models.Components;
    using Deck.SDK.Utils;
    using Newtonsoft.Json;
    
    public class LinkClientInfoResponse
    {

        /// <summary>
        /// Client name to display. If the client did not set his name yet, this property will be NULL and a default name should be displayed in that case.
        /// </summary>
        [JsonProperty("name")]
        public string? Name { get; set; } = null;

        /// <summary>
        /// Client logo URL to display.
        /// </summary>
        [JsonProperty("image_url")]
        public string? ImageUrl { get; set; }

        /// <summary>
        /// The language that Link should be displayed in.
        /// </summary>
        [JsonProperty("language")]
        public LanguageEnum? Language { get; set; }

        /// <summary>
        /// Information about the source, if using Link in Update mode.
        /// </summary>
        [JsonProperty("update_mode")]
        public UpdateMode? UpdateMode { get; set; } = null;

        /// <summary>
        /// Your terms of use to be accepted by the end-user
        /// </summary>
        [JsonProperty("terms_of_use_url")]
        public string? TermsOfUseUrl { get; set; } = null;

        /// <summary>
        /// Your privacy policy to be accepted by the end-user
        /// </summary>
        [JsonProperty("privacy_policy_url")]
        public string? PrivacyPolicyUrl { get; set; } = null;

        /// <summary>
        /// Indicates the mode in which the Link widget should run
        /// </summary>
        [JsonProperty("mode")]
        public Mode? Mode { get; set; } = null;

        /// <summary>
        /// Indicates the mode to select accounts
        /// </summary>
        [JsonProperty("account_select_mode")]
        public AccountSelectModeEnum? AccountSelectMode { get; set; }

        /// <summary>
        /// Indicates if the Link User should be able to upload documents by himself in Link
        /// </summary>
        [JsonProperty("allow_document_upload")]
        public bool? AllowDocumentUpload { get; set; }

        /// <summary>
        /// Indicates if link widget should show the consent screen
        /// </summary>
        [JsonProperty("show_step_consent")]
        public bool? ShowStepConsent { get; set; }

        /// <summary>
        /// Indicates if link widget should show the add source screen
        /// </summary>
        [JsonProperty("show_step_add_source")]
        public bool? ShowStepAddSource { get; set; }

        /// <summary>
        /// Indicates if link widget should show the account selection screen
        /// </summary>
        [JsonProperty("show_step_select_account")]
        public bool? ShowStepSelectAccount { get; set; }

        /// <summary>
        /// Indicates if link widget should show the add account screen
        /// </summary>
        [JsonProperty("show_step_add_account")]
        public bool? ShowStepAddAccount { get; set; }
    }
}